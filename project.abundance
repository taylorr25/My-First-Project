{
    "atomType": "Molecule",
    "name": "My-First-Project",
    "x": 0,
    "y": 0,
    "uniqueID": 1734979976986,
    "ioValues": [
        {
            "name": "Wood thickness",
            "ioValue": 0.7
        },
        {
            "name": "table height",
            "ioValue": 18
        },
        {
            "name": "table width",
            "ioValue": 15
        },
        {
            "name": "table length",
            "ioValue": 30
        }
    ],
    "description": "Molecules provide an organizational structure to contain atoms. Double click on a molecule to enter it. Use the up arrow in the upper right hand corner of the screen to go up one level.",
    "topLevel": true,
    "allAtoms": [
        {
            "atomType": "Output",
            "name": "Output",
            "x": 0.98,
            "y": 0.5,
            "uniqueID": 1743640240915,
            "ioValues": [
                {
                    "name": "number or geometry",
                    "ioValue": 1745162179008
                }
            ],
            "description": "Connect geometry here to make it available in the next level up. "
        },
        {
            "atomType": "Readme",
            "name": "README",
            "x": 0.17510259917920656,
            "y": 0.1897590361445783,
            "uniqueID": 1745161108672,
            "ioValues": [],
            "description": "A place to put project notes. These will appear in the GitHub readme and in the description of molecules up the chain. Markdown is supported. ",
            "readmeText": "You can use molecules to organize the different parts of your project. For this small table project I'll create 3 molecules: \n- Legs\n- Top",
            "global": true
        },
        {
            "atomType": "Readme",
            "name": "README",
            "x": 0.03967168262653899,
            "y": 0.2650602409638554,
            "uniqueID": 1745161182059,
            "ioValues": [],
            "description": "A place to put project notes. These will appear in the GitHub readme and in the description of molecules up the chain. Markdown is supported. ",
            "readmeText": "Inputs are variables which can help you and others modify your design. Possible inputs for a table would be table height, wood thickness, leg width.",
            "global": true
        },
        {
            "atomType": "Input",
            "name": "Wood thickness",
            "x": 0.04,
            "y": 0.8614457831325302,
            "uniqueID": 1745161265821,
            "ioValues": [],
            "description": "Adds an input to the parent molecule. If the parent molecule is the top level of the project then the input will be available when the project is shared or imported into another project. Name is editable",
            "type": "number"
        },
        {
            "atomType": "Input",
            "name": "table height",
            "x": 0.04,
            "y": 0.7078313253012049,
            "uniqueID": 1745161414645,
            "ioValues": [],
            "description": "Adds an input to the parent molecule. If the parent molecule is the top level of the project then the input will be available when the project is shared or imported into another project. Name is editable",
            "type": "number"
        },
        {
            "atomType": "Input",
            "name": "table width",
            "x": 0.04,
            "y": 0.5542168674698795,
            "uniqueID": 1745161425984,
            "ioValues": [],
            "description": "Adds an input to the parent molecule. If the parent molecule is the top level of the project then the input will be available when the project is shared or imported into another project. Name is editable",
            "type": "number"
        },
        {
            "atomType": "Input",
            "name": "table length",
            "x": 0.04,
            "y": 0.42168674698795183,
            "uniqueID": 1745161438472,
            "ioValues": [],
            "description": "Adds an input to the parent molecule. If the parent molecule is the top level of the project then the input will be available when the project is shared or imported into another project. Name is editable",
            "type": "number"
        },
        {
            "atomType": "Molecule",
            "name": "Top",
            "x": 0.31506849315068497,
            "y": 0.13225058004640372,
            "uniqueID": 1745161481329,
            "ioValues": [
                {
                    "name": "Wood thickness",
                    "ioValue": 0.7
                },
                {
                    "name": "table height",
                    "ioValue": 18
                },
                {
                    "name": "table width",
                    "ioValue": 15
                },
                {
                    "name": "table length",
                    "ioValue": 30
                }
            ],
            "description": "Molecules provide an organizational structure to contain atoms. Double click on a molecule to enter it. Use the up arrow in the upper right hand corner of the screen to go up one level.",
            "topLevel": false,
            "allAtoms": [
                {
                    "atomType": "Output",
                    "name": "Output",
                    "x": 0.98,
                    "y": 0.5,
                    "uniqueID": 1745161481125,
                    "ioValues": [
                        {
                            "name": "number or geometry",
                            "ioValue": 1745162195674
                        }
                    ],
                    "description": "Connect geometry here to make it available in the next level up. "
                },
                {
                    "atomType": "Input",
                    "name": "Wood thickness",
                    "x": 0.04,
                    "y": 0.8614457831325302,
                    "uniqueID": 1745161480520,
                    "ioValues": [],
                    "description": "Adds an input to the parent molecule. If the parent molecule is the top level of the project then the input will be available when the project is shared or imported into another project. Name is editable"
                },
                {
                    "atomType": "Input",
                    "name": "table height",
                    "x": 0.04,
                    "y": 0.7078313253012049,
                    "uniqueID": 1745161480887,
                    "ioValues": [],
                    "description": "Adds an input to the parent molecule. If the parent molecule is the top level of the project then the input will be available when the project is shared or imported into another project. Name is editable"
                },
                {
                    "atomType": "Input",
                    "name": "table width",
                    "x": 0.04,
                    "y": 0.5542168674698795,
                    "uniqueID": 1745161481185,
                    "ioValues": [],
                    "description": "Adds an input to the parent molecule. If the parent molecule is the top level of the project then the input will be available when the project is shared or imported into another project. Name is editable"
                },
                {
                    "atomType": "Input",
                    "name": "table length",
                    "x": 0.04,
                    "y": 0.42168674698795183,
                    "uniqueID": 1745161481301,
                    "ioValues": [],
                    "description": "Adds an input to the parent molecule. If the parent molecule is the top level of the project then the input will be available when the project is shared or imported into another project. Name is editable"
                },
                {
                    "atomType": "GitHubMolecule",
                    "name": "Rounded-Rectangle",
                    "x": 0.3125854993160055,
                    "y": 0.4126506024096385,
                    "uniqueID": 1745161601622,
                    "ioValues": [
                        {
                            "name": "Diameter",
                            "ioValue": 1
                        },
                        {
                            "name": "Width",
                            "ioValue": 15
                        },
                        {
                            "name": "Height",
                            "ioValue": 7.5
                        }
                    ],
                    "description": "Project imported from GitHub",
                    "topLevel": false,
                    "allAtoms": [
                        {
                            "atomType": "Output",
                            "name": "Output",
                            "x": 0.98,
                            "y": 0.5,
                            "uniqueID": 1745161601747,
                            "ioValues": [
                                {
                                    "name": "number or geometry",
                                    "ioValue": 1745161601521
                                }
                            ],
                            "description": "Connect geometry here to make it available in the next level up. "
                        },
                        {
                            "atomType": "Circle",
                            "name": "Circle",
                            "x": 0.12187500000000001,
                            "y": 0.24941176470588236,
                            "uniqueID": 1745161601237,
                            "ioValues": [
                                {
                                    "name": "diameter",
                                    "ioValue": 1
                                }
                            ],
                            "description": "Creates a new circle."
                        },
                        {
                            "atomType": "Input",
                            "name": "Diameter",
                            "x": 0.04,
                            "y": 0.27999999999999997,
                            "uniqueID": 1745161601238,
                            "ioValues": [],
                            "description": "Adds an input to the parent molecule. If the parent molecule is the top level of the project then the input will be available when the project is shared or imported into another project. Name is editable"
                        },
                        {
                            "atomType": "Input",
                            "name": "Width",
                            "x": 0.04,
                            "y": 0.5105882352941177,
                            "uniqueID": 1745161601083,
                            "ioValues": [],
                            "description": "Adds an input to the parent molecule. If the parent molecule is the top level of the project then the input will be available when the project is shared or imported into another project. Name is editable"
                        },
                        {
                            "atomType": "Input",
                            "name": "Height",
                            "x": 0.04,
                            "y": 0.8070588235294117,
                            "uniqueID": 1745161601250,
                            "ioValues": [],
                            "description": "Adds an input to the parent molecule. If the parent molecule is the top level of the project then the input will be available when the project is shared or imported into another project. Name is editable"
                        },
                        {
                            "atomType": "Move",
                            "name": "Move",
                            "x": 0.24427083333333333,
                            "y": 0.8729411764705881,
                            "uniqueID": 1745161601652,
                            "ioValues": [
                                {
                                    "name": "geometry",
                                    "ioValue": 1745161601237
                                },
                                {
                                    "name": "xDist",
                                    "ioValue": -15
                                },
                                {
                                    "name": "yDist",
                                    "ioValue": -7.5
                                },
                                {
                                    "name": "zDist",
                                    "ioValue": 0
                                }
                            ],
                            "description": "Moves a shape laterally in X, Y, Z."
                        },
                        {
                            "atomType": "Move",
                            "name": "Move",
                            "x": 0.3307291666666667,
                            "y": 0.6752941176470588,
                            "uniqueID": 1745161601992,
                            "ioValues": [
                                {
                                    "name": "geometry",
                                    "ioValue": 1745161601237
                                },
                                {
                                    "name": "xDist",
                                    "ioValue": -15
                                },
                                {
                                    "name": "yDist",
                                    "ioValue": 7.5
                                },
                                {
                                    "name": "zDist",
                                    "ioValue": 0
                                }
                            ],
                            "description": "Moves a shape laterally in X, Y, Z."
                        },
                        {
                            "atomType": "Move",
                            "name": "Move",
                            "x": 0.31979166666666664,
                            "y": 0.42117647058823526,
                            "uniqueID": 1745161601437,
                            "ioValues": [
                                {
                                    "name": "geometry",
                                    "ioValue": 1745161601237
                                },
                                {
                                    "name": "xDist",
                                    "ioValue": 15
                                },
                                {
                                    "name": "yDist",
                                    "ioValue": 7.5
                                },
                                {
                                    "name": "zDist",
                                    "ioValue": 0
                                }
                            ],
                            "description": "Moves a shape laterally in X, Y, Z."
                        },
                        {
                            "atomType": "Move",
                            "name": "Move",
                            "x": 0.2604166666666667,
                            "y": 0.1388235294117647,
                            "uniqueID": 1745161601900,
                            "ioValues": [
                                {
                                    "name": "geometry",
                                    "ioValue": 1745161601237
                                },
                                {
                                    "name": "xDist",
                                    "ioValue": 15
                                },
                                {
                                    "name": "yDist",
                                    "ioValue": -7.5
                                },
                                {
                                    "name": "zDist",
                                    "ioValue": 0
                                }
                            ],
                            "description": "Moves a shape laterally in X, Y, Z."
                        },
                        {
                            "atomType": "ShrinkWrap",
                            "name": "Shrink Wrap",
                            "x": 0.43697916666666664,
                            "y": 0.6164705882352941,
                            "uniqueID": 1745161601521,
                            "ioValues": [
                                {
                                    "name": "3D shape 1",
                                    "ioValue": 1745161601652
                                },
                                {
                                    "name": "3D shape 2",
                                    "ioValue": 1745161601992
                                },
                                {
                                    "name": "3D shape 3",
                                    "ioValue": 1745161601437
                                },
                                {
                                    "name": "3D shape 4",
                                    "ioValue": 1745161601900
                                },
                                {
                                    "name": "3D shape 5",
                                    "ioValue": ""
                                },
                                {
                                    "name": "3D shape 1",
                                    "ioValue": 1745161601652
                                },
                                {
                                    "name": "3D shape 2",
                                    "ioValue": 1745161601992
                                },
                                {
                                    "name": "3D shape 3",
                                    "ioValue": 1745161601437
                                },
                                {
                                    "name": "3D shape 4",
                                    "ioValue": 1745161601900
                                },
                                {
                                    "name": "3D shape 5",
                                    "ioValue": ""
                                }
                            ],
                            "description": "Joins two or more drawings into a single sketch by filling in the space between them. Also called 'hull'"
                        },
                        {
                            "atomType": "Equation",
                            "name": "-1*D",
                            "x": 0.10520833333333333,
                            "y": 0.6235294117647059,
                            "uniqueID": 1745161601224,
                            "ioValues": [
                                {
                                    "name": "D",
                                    "ioValue": 15
                                }
                            ],
                            "description": "Defines a mathematical equation. Edit the output field to add or remove inputs.",
                            "currentEquation": "-1*D"
                        },
                        {
                            "atomType": "Equation",
                            "name": "-1*D",
                            "x": 0.12395833333333334,
                            "y": 0.9129411764705881,
                            "uniqueID": 1745161601676,
                            "ioValues": [
                                {
                                    "name": "D",
                                    "ioValue": 7.5
                                }
                            ],
                            "description": "Defines a mathematical equation. Edit the output field to add or remove inputs.",
                            "currentEquation": "-1*D"
                        }
                    ],
                    "allConnectors": [
                        {
                            "ap1Name": "geometry",
                            "ap2Name": "geometry",
                            "ap2Primary": true,
                            "ap1ID": 1745161601237,
                            "ap2ID": 1745161601652
                        },
                        {
                            "ap1Name": "geometry",
                            "ap2Name": "geometry",
                            "ap2Primary": true,
                            "ap1ID": 1745161601237,
                            "ap2ID": 1745161601992
                        },
                        {
                            "ap1Name": "geometry",
                            "ap2Name": "geometry",
                            "ap2Primary": true,
                            "ap1ID": 1745161601237,
                            "ap2ID": 1745161601437
                        },
                        {
                            "ap1Name": "geometry",
                            "ap2Name": "geometry",
                            "ap2Primary": true,
                            "ap1ID": 1745161601237,
                            "ap2ID": 1745161601900
                        },
                        {
                            "ap1Name": "number or geometry",
                            "ap2Name": "diameter",
                            "ap2Primary": false,
                            "ap1ID": 1745161601238,
                            "ap2ID": 1745161601237
                        },
                        {
                            "ap1Name": "number or geometry",
                            "ap2Name": "D",
                            "ap2Primary": false,
                            "ap1ID": 1745161601083,
                            "ap2ID": 1745161601224
                        },
                        {
                            "ap1Name": "number or geometry",
                            "ap2Name": "xDist",
                            "ap2Primary": false,
                            "ap1ID": 1745161601083,
                            "ap2ID": 1745161601900
                        },
                        {
                            "ap1Name": "number or geometry",
                            "ap2Name": "xDist",
                            "ap2Primary": false,
                            "ap1ID": 1745161601083,
                            "ap2ID": 1745161601437
                        },
                        {
                            "ap1Name": "number or geometry",
                            "ap2Name": "D",
                            "ap2Primary": false,
                            "ap1ID": 1745161601250,
                            "ap2ID": 1745161601676
                        },
                        {
                            "ap1Name": "number or geometry",
                            "ap2Name": "yDist",
                            "ap2Primary": false,
                            "ap1ID": 1745161601250,
                            "ap2ID": 1745161601992
                        },
                        {
                            "ap1Name": "number or geometry",
                            "ap2Name": "yDist",
                            "ap2Primary": false,
                            "ap1ID": 1745161601250,
                            "ap2ID": 1745161601437
                        },
                        {
                            "ap1Name": "geometry",
                            "ap2Name": "3D shape 1",
                            "ap2Primary": false,
                            "ap1ID": 1745161601652,
                            "ap2ID": 1745161601521
                        },
                        {
                            "ap1Name": "geometry",
                            "ap2Name": "3D shape 2",
                            "ap2Primary": false,
                            "ap1ID": 1745161601992,
                            "ap2ID": 1745161601521
                        },
                        {
                            "ap1Name": "geometry",
                            "ap2Name": "3D shape 3",
                            "ap2Primary": false,
                            "ap1ID": 1745161601437,
                            "ap2ID": 1745161601521
                        },
                        {
                            "ap1Name": "geometry",
                            "ap2Name": "3D shape 4",
                            "ap2Primary": false,
                            "ap1ID": 1745161601900,
                            "ap2ID": 1745161601521
                        },
                        {
                            "ap1Name": "geometry",
                            "ap2Name": "number or geometry",
                            "ap2Primary": false,
                            "ap1ID": 1745161601521,
                            "ap2ID": 1745161601747
                        },
                        {
                            "ap1Name": "result",
                            "ap2Name": "xDist",
                            "ap2Primary": false,
                            "ap1ID": 1745161601224,
                            "ap2ID": 1745161601652
                        },
                        {
                            "ap1Name": "result",
                            "ap2Name": "xDist",
                            "ap2Primary": false,
                            "ap1ID": 1745161601224,
                            "ap2ID": 1745161601992
                        },
                        {
                            "ap1Name": "result",
                            "ap2Name": "yDist",
                            "ap2Primary": false,
                            "ap1ID": 1745161601676,
                            "ap2ID": 1745161601652
                        },
                        {
                            "ap1Name": "result",
                            "ap2Name": "yDist",
                            "ap2Primary": false,
                            "ap1ID": 1745161601676,
                            "ap2ID": 1745161601900
                        }
                    ],
                    "parentRepo": {
                        "lastFoundGit": "2025-03-02T16:20:37.798Z",
                        "repoName": "Rounded-Rectangle",
                        "dateCreated": "2024-08-05T22:49:32Z",
                        "readMe": "https://raw.githubusercontent.com/annamaslowcnc/Rounded-Rectangle/master/README.md?sanitize=true",
                        "yyyy": 2024,
                        "topMoleculeID": 1722898168700,
                        "html_url": "https://github.com/annamaslowcnc/Rounded-Rectangle",
                        "topics": [],
                        "forks": 0,
                        "dateModified": "739149",
                        "ranking": 0,
                        "searchField": "rounded-rectangle annamaslowcnc",
                        "owner": "annamaslowcnc",
                        "contentURL": "https://raw.githubusercontent.com/annamaslowcnc/Rounded-Rectangle/master/project.abundance?sanitize=true",
                        "svgURL": "https://raw.githubusercontent.com/annamaslowcnc/Rounded-Rectangle/master/project.svg?sanitize=true"
                    },
                    "unitsKey": "MM",
                    "fileTypeVersion": 1,
                    "compiledBom": []
                },
                {
                    "atomType": "Difference",
                    "name": "Difference",
                    "x": 0.5314637482900137,
                    "y": 0.2921686746987952,
                    "uniqueID": 1745162047700,
                    "ioValues": [
                        {
                            "name": "geometry2",
                            "ioValue": ""
                        },
                        {
                            "name": "geometry1",
                            "ioValue": 1745161601622
                        }
                    ],
                    "description": "Subtracts shape two from shape one."
                },
                {
                    "atomType": "Extrude",
                    "name": "Extrude",
                    "x": 0.6689466484268126,
                    "y": 0.6295180722891566,
                    "uniqueID": 1745162065214,
                    "ioValues": [
                        {
                            "name": "geometry",
                            "ioValue": 1745161601622
                        },
                        {
                            "name": "height",
                            "ioValue": 0.7
                        }
                    ],
                    "description": "Extrudes a 2D shape. Input can be negitive. "
                },
                {
                    "atomType": "Move",
                    "name": "Move",
                    "x": 0.8036935704514363,
                    "y": 0.3403614457831325,
                    "uniqueID": 1745162195674,
                    "ioValues": [
                        {
                            "name": "geometry",
                            "ioValue": 1745162065214
                        },
                        {
                            "name": "xDist",
                            "ioValue": 0
                        },
                        {
                            "name": "yDist",
                            "ioValue": 0
                        },
                        {
                            "name": "zDist",
                            "ioValue": 18
                        }
                    ],
                    "description": "Moves a shape laterally in X, Y, Z."
                },
                {
                    "atomType": "Import",
                    "name": "Import",
                    "x": 0.3679890560875513,
                    "y": 0.8765060240963856,
                    "uniqueID": 1745162257471,
                    "ioValues": [],
                    "description": "Import Atom, let's you choose a type of file to import and use in your design.",
                    "fileName": "1775542.svg",
                    "type": "SVG",
                    "SVGwidth": 15
                },
                {
                    "atomType": "Readme",
                    "name": "README",
                    "x": 0.24555403556771546,
                    "y": 0.2168674698795181,
                    "uniqueID": 1745162330437,
                    "ioValues": [],
                    "description": "A place to put project notes. These will appear in the GitHub readme and in the description of molecules up the chain. Markdown is supported. ",
                    "readmeText": "Readme text here",
                    "global": true
                },
                {
                    "atomType": "Readme",
                    "name": "README",
                    "x": 0.31053351573187415,
                    "y": 0.825301204819277,
                    "uniqueID": 1745162378868,
                    "ioValues": [],
                    "description": "A place to put project notes. These will appear in the GitHub readme and in the description of molecules up the chain. Markdown is supported. ",
                    "readmeText": "Import svg files to use in your project. ",
                    "global": true
                },
                {
                    "atomType": "Equation",
                    "name": "x/2",
                    "x": 0.15253077975376197,
                    "y": 0.2319277108433735,
                    "uniqueID": 1745359455013,
                    "ioValues": [
                        {
                            "name": "x",
                            "ioValue": 30
                        }
                    ],
                    "description": "Defines a mathematical equation. Edit the output field to add or remove inputs.",
                    "currentEquation": "x/2"
                },
                {
                    "atomType": "Equation",
                    "name": "x/2",
                    "x": 0.1853625170998632,
                    "y": 0.6445783132530121,
                    "uniqueID": 1745359499730,
                    "ioValues": [
                        {
                            "name": "x",
                            "ioValue": 15
                        }
                    ],
                    "description": "Defines a mathematical equation. Edit the output field to add or remove inputs.",
                    "currentEquation": "x/2"
                }
            ],
            "allConnectors": [
                {
                    "ap1Name": "number or geometry",
                    "ap2Name": "height",
                    "ap2Primary": false,
                    "ap1ID": 1745161480520,
                    "ap2ID": 1745162065214
                },
                {
                    "ap1Name": "number or geometry",
                    "ap2Name": "zDist",
                    "ap2Primary": false,
                    "ap1ID": 1745161480887,
                    "ap2ID": 1745162195674
                },
                {
                    "ap1Name": "number or geometry",
                    "ap2Name": "x",
                    "ap2Primary": false,
                    "ap1ID": 1745161481185,
                    "ap2ID": 1745359499730
                },
                {
                    "ap1Name": "number or geometry",
                    "ap2Name": "x",
                    "ap2Primary": false,
                    "ap1ID": 1745161481301,
                    "ap2ID": 1745359455013
                },
                {
                    "ap1Name": "Geometry",
                    "ap2Name": "geometry1",
                    "ap2Primary": false,
                    "ap1ID": 1745161601622,
                    "ap2ID": 1745162047700
                },
                {
                    "ap1Name": "Geometry",
                    "ap2Name": "geometry",
                    "ap2Primary": true,
                    "ap1ID": 1745161601622,
                    "ap2ID": 1745162065214
                },
                {
                    "ap1Name": "geometry",
                    "ap2Name": "geometry",
                    "ap2Primary": true,
                    "ap1ID": 1745162065214,
                    "ap2ID": 1745162195674
                },
                {
                    "ap1Name": "geometry",
                    "ap2Name": "number or geometry",
                    "ap2Primary": false,
                    "ap1ID": 1745162195674,
                    "ap2ID": 1745161481125
                },
                {
                    "ap1Name": "result",
                    "ap2Name": "Width",
                    "ap2Primary": false,
                    "ap1ID": 1745359455013,
                    "ap2ID": 1745161601622
                },
                {
                    "ap1Name": "result",
                    "ap2Name": "Height",
                    "ap2Primary": false,
                    "ap1ID": 1745359499730,
                    "ap2ID": 1745161601622
                }
            ],
            "fileTypeVersion": 1,
            "compiledBom": []
        },
        {
            "atomType": "Assembly",
            "name": "Assembly",
            "x": 0.4883561643835616,
            "y": 0.4802784222737819,
            "uniqueID": 1745162179008,
            "ioValues": [
                {
                    "name": "Shape 1",
                    "ioValue": 1745161481329
                },
                {
                    "name": "Shape 2",
                    "ioValue": 1745162618505
                },
                {
                    "name": "Shape 3",
                    "ioValue": 1745162799100
                }
            ],
            "description": "Pick between assembly and fusion to join input geometries. Assembly takes multiple shapes together into one, shapes higher in the inputs list will cut into shapes lower on the input list where they overlap. Fusion takes all shapes or sketches and fuses them permanently into a single shape"
        },
        {
            "atomType": "Readme",
            "name": "README",
            "x": 0.7243502051983584,
            "y": 0.391566265060241,
            "uniqueID": 1745162429610,
            "ioValues": [],
            "description": "A place to put project notes. These will appear in the GitHub readme and in the description of molecules up the chain. Markdown is supported. ",
            "readmeText": "Readme text here",
            "global": true
        },
        {
            "atomType": "Readme",
            "name": "README",
            "x": 0.9254445964432284,
            "y": 0.39759036144578314,
            "uniqueID": 1745162466760,
            "ioValues": [],
            "description": "A place to put project notes. These will appear in the GitHub readme and in the description of molecules up the chain. Markdown is supported. ",
            "readmeText": "Connect your final assembly to the output. This will create a thumbnail and create a final atom that others will be able to see and fork on run mode. \nIt will also let you see your whole design as a wireframe while you're inside other atoms.",
            "global": true
        },
        {
            "atomType": "Molecule",
            "name": "Legs",
            "x": 0.28493150684931506,
            "y": 0.382830626450116,
            "uniqueID": 1745162618505,
            "ioValues": [
                {
                    "name": "Wood thickness",
                    "ioValue": 0.7
                },
                {
                    "name": "table height",
                    "ioValue": 18
                },
                {
                    "name": "table width",
                    "ioValue": 15
                },
                {
                    "name": "table length",
                    "ioValue": 30
                }
            ],
            "description": "Molecules provide an organizational structure to contain atoms. Double click on a molecule to enter it. Use the up arrow in the upper right hand corner of the screen to go up one level.",
            "topLevel": false,
            "allAtoms": [
                {
                    "atomType": "Output",
                    "name": "Output",
                    "x": 0.98,
                    "y": 0.5,
                    "uniqueID": 1745162618702,
                    "ioValues": [
                        {
                            "name": "number or geometry",
                            "ioValue": 1745163375568
                        }
                    ],
                    "description": "Connect geometry here to make it available in the next level up. "
                },
                {
                    "atomType": "Input",
                    "name": "Wood thickness",
                    "x": 0.04,
                    "y": 0.8614457831325302,
                    "uniqueID": 1745162618772,
                    "ioValues": [],
                    "description": "Adds an input to the parent molecule. If the parent molecule is the top level of the project then the input will be available when the project is shared or imported into another project. Name is editable"
                },
                {
                    "atomType": "Input",
                    "name": "table height",
                    "x": 0.04,
                    "y": 0.7078313253012049,
                    "uniqueID": 1745162618417,
                    "ioValues": [],
                    "description": "Adds an input to the parent molecule. If the parent molecule is the top level of the project then the input will be available when the project is shared or imported into another project. Name is editable"
                },
                {
                    "atomType": "Input",
                    "name": "table width",
                    "x": 0.04,
                    "y": 0.5542168674698795,
                    "uniqueID": 1745162618764,
                    "ioValues": [],
                    "description": "Adds an input to the parent molecule. If the parent molecule is the top level of the project then the input will be available when the project is shared or imported into another project. Name is editable"
                },
                {
                    "atomType": "Input",
                    "name": "table length",
                    "x": 0.04,
                    "y": 0.42168674698795183,
                    "uniqueID": 1745162618545,
                    "ioValues": [],
                    "description": "Adds an input to the parent molecule. If the parent molecule is the top level of the project then the input will be available when the project is shared or imported into another project. Name is editable"
                },
                {
                    "atomType": "Molecule",
                    "name": "Leg",
                    "x": 0.3166894664842681,
                    "y": 0.21084337349397592,
                    "uniqueID": 1745162658390,
                    "ioValues": [
                        {
                            "name": "Wood thickness",
                            "ioValue": 0.7
                        },
                        {
                            "name": "table height",
                            "ioValue": 18
                        },
                        {
                            "name": "table width",
                            "ioValue": 10
                        },
                        {
                            "name": "table length",
                            "ioValue": 10
                        }
                    ],
                    "description": "Molecules provide an organizational structure to contain atoms. Double click on a molecule to enter it. Use the up arrow in the upper right hand corner of the screen to go up one level.",
                    "topLevel": false,
                    "allAtoms": [
                        {
                            "atomType": "Output",
                            "name": "Output",
                            "x": 0.98,
                            "y": 0.5,
                            "uniqueID": 1745162658607,
                            "ioValues": [
                                {
                                    "name": "number or geometry",
                                    "ioValue": 1745163061471
                                }
                            ],
                            "description": "Connect geometry here to make it available in the next level up. "
                        },
                        {
                            "atomType": "Input",
                            "name": "Wood thickness",
                            "x": 0.04,
                            "y": 0.8614457831325302,
                            "uniqueID": 1745162658365,
                            "ioValues": [],
                            "description": "Adds an input to the parent molecule. If the parent molecule is the top level of the project then the input will be available when the project is shared or imported into another project. Name is editable"
                        },
                        {
                            "atomType": "Input",
                            "name": "table height",
                            "x": 0.04,
                            "y": 0.7078313253012049,
                            "uniqueID": 1745162658761,
                            "ioValues": [],
                            "description": "Adds an input to the parent molecule. If the parent molecule is the top level of the project then the input will be available when the project is shared or imported into another project. Name is editable"
                        },
                        {
                            "atomType": "Input",
                            "name": "table width",
                            "x": 0.04,
                            "y": 0.5542168674698795,
                            "uniqueID": 1745162657945,
                            "ioValues": [],
                            "description": "Adds an input to the parent molecule. If the parent molecule is the top level of the project then the input will be available when the project is shared or imported into another project. Name is editable"
                        },
                        {
                            "atomType": "Input",
                            "name": "table length",
                            "x": 0.04,
                            "y": 0.42168674698795183,
                            "uniqueID": 1745162658289,
                            "ioValues": [],
                            "description": "Adds an input to the parent molecule. If the parent molecule is the top level of the project then the input will be available when the project is shared or imported into another project. Name is editable"
                        },
                        {
                            "atomType": "Rectangle",
                            "name": "Rectangle",
                            "x": 0.265389876880985,
                            "y": 0.35843373493975905,
                            "uniqueID": 1745162837786,
                            "ioValues": [
                                {
                                    "name": "x length",
                                    "ioValue": 2.5
                                },
                                {
                                    "name": "y length",
                                    "ioValue": 18
                                }
                            ],
                            "description": "Creates a new rectangle."
                        },
                        {
                            "atomType": "Extrude",
                            "name": "Extrude",
                            "x": 0.40013679890560877,
                            "y": 0.391566265060241,
                            "uniqueID": 1745162855636,
                            "ioValues": [
                                {
                                    "name": "geometry",
                                    "ioValue": 1745162837786
                                },
                                {
                                    "name": "height",
                                    "ioValue": 0.7
                                }
                            ],
                            "description": "Extrudes a 2D shape. Input can be negitive. "
                        },
                        {
                            "atomType": "Move",
                            "name": "Move",
                            "x": 0.7147742818057455,
                            "y": 0.6174698795180722,
                            "uniqueID": 1745163061471,
                            "ioValues": [
                                {
                                    "name": "geometry",
                                    "ioValue": 1745163067250
                                },
                                {
                                    "name": "xDist",
                                    "ioValue": 0
                                },
                                {
                                    "name": "yDist",
                                    "ioValue": 0
                                },
                                {
                                    "name": "zDist",
                                    "ioValue": 9
                                }
                            ],
                            "description": "Moves a shape laterally in X, Y, Z."
                        },
                        {
                            "atomType": "Rotate",
                            "name": "Rotate",
                            "x": 0.5581395348837209,
                            "y": 0.40963855421686746,
                            "uniqueID": 1745163067250,
                            "ioValues": [
                                {
                                    "name": "geometry",
                                    "ioValue": 1745162855636
                                },
                                {
                                    "name": "x-axis degrees",
                                    "ioValue": 90
                                },
                                {
                                    "name": "y-axis degrees",
                                    "ioValue": 0
                                },
                                {
                                    "name": "z-axis degrees",
                                    "ioValue": 0
                                }
                            ],
                            "description": "Rotates the input geometry around the X, Y, or Z axis. Inputs are degrees."
                        },
                        {
                            "atomType": "Equation",
                            "name": "x/2",
                            "x": 0.49794801641586867,
                            "y": 0.8132530120481928,
                            "uniqueID": 1745163092427,
                            "ioValues": [
                                {
                                    "name": "x",
                                    "ioValue": 18
                                }
                            ],
                            "description": "Defines a mathematical equation. Edit the output field to add or remove inputs.",
                            "currentEquation": "x/2"
                        }
                    ],
                    "allConnectors": [
                        {
                            "ap1Name": "number or geometry",
                            "ap2Name": "height",
                            "ap2Primary": false,
                            "ap1ID": 1745162658365,
                            "ap2ID": 1745162855636
                        },
                        {
                            "ap1Name": "number or geometry",
                            "ap2Name": "y length",
                            "ap2Primary": false,
                            "ap1ID": 1745162658761,
                            "ap2ID": 1745162837786
                        },
                        {
                            "ap1Name": "number or geometry",
                            "ap2Name": "x",
                            "ap2Primary": false,
                            "ap1ID": 1745162658761,
                            "ap2ID": 1745163092427
                        },
                        {
                            "ap1Name": "geometry",
                            "ap2Name": "geometry",
                            "ap2Primary": true,
                            "ap1ID": 1745162837786,
                            "ap2ID": 1745162855636
                        },
                        {
                            "ap1Name": "geometry",
                            "ap2Name": "geometry",
                            "ap2Primary": true,
                            "ap1ID": 1745162855636,
                            "ap2ID": 1745163067250
                        },
                        {
                            "ap1Name": "geometry",
                            "ap2Name": "number or geometry",
                            "ap2Primary": false,
                            "ap1ID": 1745163061471,
                            "ap2ID": 1745162658607
                        },
                        {
                            "ap1Name": "geometry",
                            "ap2Name": "geometry",
                            "ap2Primary": true,
                            "ap1ID": 1745163067250,
                            "ap2ID": 1745163061471
                        },
                        {
                            "ap1Name": "result",
                            "ap2Name": "zDist",
                            "ap2Primary": false,
                            "ap1ID": 1745163092427,
                            "ap2ID": 1745163061471
                        }
                    ],
                    "fileTypeVersion": 1,
                    "compiledBom": []
                },
                {
                    "atomType": "Readme",
                    "name": "README",
                    "x": 0.2222982216142271,
                    "y": 0.27710843373493976,
                    "uniqueID": 1745162661428,
                    "ioValues": [],
                    "description": "A place to put project notes. These will appear in the GitHub readme and in the description of molecules up the chain. Markdown is supported. ",
                    "readmeText": "Molecules can be nested so you can make as many levels of molecules as you'd like. \nOn the top left of the screen you can see which molecule you're inside of.",
                    "global": true
                },
                {
                    "atomType": "Move",
                    "name": "Move",
                    "x": 0.5588235294117647,
                    "y": 0.5,
                    "uniqueID": 1745163124686,
                    "ioValues": [
                        {
                            "name": "geometry",
                            "ioValue": 1745162658390
                        },
                        {
                            "name": "xDist",
                            "ioValue": -13.5
                        },
                        {
                            "name": "yDist",
                            "ioValue": 0
                        },
                        {
                            "name": "zDist",
                            "ioValue": 0
                        }
                    ],
                    "description": "Moves a shape laterally in X, Y, Z."
                },
                {
                    "atomType": "Equation",
                    "name": "x - 3",
                    "x": 0.23597811217510262,
                    "y": 0.6234939759036144,
                    "uniqueID": 1745163139021,
                    "ioValues": [
                        {
                            "name": "x",
                            "ioValue": 30
                        }
                    ],
                    "description": "Defines a mathematical equation. Edit the output field to add or remove inputs.",
                    "currentEquation": "x - 3"
                },
                {
                    "atomType": "Equation",
                    "name": "-x/2",
                    "x": 0.42339261285909713,
                    "y": 0.4789156626506024,
                    "uniqueID": 1745163155780,
                    "ioValues": [
                        {
                            "name": "x",
                            "ioValue": 27
                        }
                    ],
                    "description": "Defines a mathematical equation. Edit the output field to add or remove inputs.",
                    "currentEquation": "-x/2"
                },
                {
                    "atomType": "Assembly",
                    "name": "Assembly",
                    "x": 0.6607387140902873,
                    "y": 0.18373493975903615,
                    "uniqueID": 1745163210640,
                    "ioValues": [
                        {
                            "name": "Shape 2",
                            "ioValue": 1745163124686
                        },
                        {
                            "name": "Shape 3",
                            "ioValue": 1745359415373
                        }
                    ],
                    "description": "Pick between assembly and fusion to join input geometries. Assembly takes multiple shapes together into one, shapes higher in the inputs list will cut into shapes lower on the input list where they overlap. Fusion takes all shapes or sketches and fuses them permanently into a single shape"
                },
                {
                    "atomType": "Move",
                    "name": "Move",
                    "x": 0.79890560875513,
                    "y": 0.2891566265060241,
                    "uniqueID": 1745163322937,
                    "ioValues": [
                        {
                            "name": "geometry",
                            "ioValue": 1745163210640
                        },
                        {
                            "name": "xDist",
                            "ioValue": 0
                        },
                        {
                            "name": "yDist",
                            "ioValue": 6.85
                        },
                        {
                            "name": "zDist",
                            "ioValue": 0
                        }
                    ],
                    "description": "Moves a shape laterally in X, Y, Z."
                },
                {
                    "atomType": "Equation",
                    "name": "x /2 + y/2",
                    "x": 0.4801641586867305,
                    "y": 0.7018072289156627,
                    "uniqueID": 1745163343021,
                    "ioValues": [
                        {
                            "name": "x",
                            "ioValue": 13
                        },
                        {
                            "name": "y",
                            "ioValue": 0.7
                        }
                    ],
                    "description": "Defines a mathematical equation. Edit the output field to add or remove inputs.",
                    "currentEquation": "x /2 + y/2"
                },
                {
                    "atomType": "Equation",
                    "name": "x - 2",
                    "x": 0.23734610123119015,
                    "y": 0.8313253012048193,
                    "uniqueID": 1745163350087,
                    "ioValues": [
                        {
                            "name": "x",
                            "ioValue": 15
                        }
                    ],
                    "description": "Defines a mathematical equation. Edit the output field to add or remove inputs.",
                    "currentEquation": "x - 2"
                },
                {
                    "atomType": "Assembly",
                    "name": "Assembly",
                    "x": 0.8905608755129959,
                    "y": 0.47289156626506024,
                    "uniqueID": 1745163375568,
                    "ioValues": [
                        {
                            "name": "Shape 2",
                            "ioValue": 1745163322937
                        },
                        {
                            "name": "Shape 3",
                            "ioValue": 1745359549690
                        }
                    ],
                    "description": "Pick between assembly and fusion to join input geometries. Assembly takes multiple shapes together into one, shapes higher in the inputs list will cut into shapes lower on the input list where they overlap. Fusion takes all shapes or sketches and fuses them permanently into a single shape"
                },
                {
                    "atomType": "Equation",
                    "name": "x/2",
                    "x": 0.3392612859097127,
                    "y": 0.4879518072289156,
                    "uniqueID": 1745359394075,
                    "ioValues": [
                        {
                            "name": "x",
                            "ioValue": 27
                        }
                    ],
                    "description": "Defines a mathematical equation. Edit the output field to add or remove inputs.",
                    "currentEquation": "x/2"
                },
                {
                    "atomType": "Move",
                    "name": "Move",
                    "x": 0.5540355677154583,
                    "y": 0.20783132530120482,
                    "uniqueID": 1745359415373,
                    "ioValues": [
                        {
                            "name": "geometry",
                            "ioValue": 1745162658390
                        },
                        {
                            "name": "xDist",
                            "ioValue": 13.5
                        },
                        {
                            "name": "yDist",
                            "ioValue": 0
                        },
                        {
                            "name": "zDist",
                            "ioValue": 0
                        }
                    ],
                    "description": "Moves a shape laterally in X, Y, Z."
                },
                {
                    "atomType": "Equation",
                    "name": "-x /2 + y/2",
                    "x": 0.539671682626539,
                    "y": 0.9126506024096386,
                    "uniqueID": 1745359540396,
                    "ioValues": [
                        {
                            "name": "x",
                            "ioValue": 13
                        },
                        {
                            "name": "y",
                            "ioValue": 0.7
                        }
                    ],
                    "description": "Defines a mathematical equation. Edit the output field to add or remove inputs.",
                    "currentEquation": "-x /2 + y/2"
                },
                {
                    "atomType": "Move",
                    "name": "Move",
                    "x": 0.8036935704514363,
                    "y": 0.7259036144578314,
                    "uniqueID": 1745359549690,
                    "ioValues": [
                        {
                            "name": "geometry",
                            "ioValue": 1745163210640
                        },
                        {
                            "name": "xDist",
                            "ioValue": 0
                        },
                        {
                            "name": "yDist",
                            "ioValue": -6.15
                        },
                        {
                            "name": "zDist",
                            "ioValue": 0
                        }
                    ],
                    "description": "Moves a shape laterally in X, Y, Z."
                }
            ],
            "allConnectors": [
                {
                    "ap1Name": "number or geometry",
                    "ap2Name": "Wood thickness",
                    "ap2Primary": false,
                    "ap1ID": 1745162618772,
                    "ap2ID": 1745162658390
                },
                {
                    "ap1Name": "number or geometry",
                    "ap2Name": "y",
                    "ap2Primary": false,
                    "ap1ID": 1745162618772,
                    "ap2ID": 1745163343021
                },
                {
                    "ap1Name": "number or geometry",
                    "ap2Name": "y",
                    "ap2Primary": false,
                    "ap1ID": 1745162618772,
                    "ap2ID": 1745359540396
                },
                {
                    "ap1Name": "number or geometry",
                    "ap2Name": "table height",
                    "ap2Primary": false,
                    "ap1ID": 1745162618417,
                    "ap2ID": 1745162658390
                },
                {
                    "ap1Name": "number or geometry",
                    "ap2Name": "x",
                    "ap2Primary": false,
                    "ap1ID": 1745162618764,
                    "ap2ID": 1745163350087
                },
                {
                    "ap1Name": "number or geometry",
                    "ap2Name": "x",
                    "ap2Primary": false,
                    "ap1ID": 1745162618545,
                    "ap2ID": 1745163139021
                },
                {
                    "ap1Name": "Geometry",
                    "ap2Name": "geometry",
                    "ap2Primary": true,
                    "ap1ID": 1745162658390,
                    "ap2ID": 1745163124686
                },
                {
                    "ap1Name": "Geometry",
                    "ap2Name": "geometry",
                    "ap2Primary": true,
                    "ap1ID": 1745162658390,
                    "ap2ID": 1745359415373
                },
                {
                    "ap1Name": "geometry",
                    "ap2Name": "Shape 2",
                    "ap2Primary": false,
                    "ap1ID": 1745163124686,
                    "ap2ID": 1745163210640
                },
                {
                    "ap1Name": "result",
                    "ap2Name": "x",
                    "ap2Primary": false,
                    "ap1ID": 1745163139021,
                    "ap2ID": 1745163155780
                },
                {
                    "ap1Name": "result",
                    "ap2Name": "x",
                    "ap2Primary": false,
                    "ap1ID": 1745163139021,
                    "ap2ID": 1745359394075
                },
                {
                    "ap1Name": "result",
                    "ap2Name": "xDist",
                    "ap2Primary": false,
                    "ap1ID": 1745163155780,
                    "ap2ID": 1745163124686
                },
                {
                    "ap1Name": "geometry",
                    "ap2Name": "geometry",
                    "ap2Primary": true,
                    "ap1ID": 1745163210640,
                    "ap2ID": 1745163322937
                },
                {
                    "ap1Name": "geometry",
                    "ap2Name": "geometry",
                    "ap2Primary": true,
                    "ap1ID": 1745163210640,
                    "ap2ID": 1745359549690
                },
                {
                    "ap1Name": "geometry",
                    "ap2Name": "Shape 2",
                    "ap2Primary": false,
                    "ap1ID": 1745163322937,
                    "ap2ID": 1745163375568
                },
                {
                    "ap1Name": "result",
                    "ap2Name": "yDist",
                    "ap2Primary": false,
                    "ap1ID": 1745163343021,
                    "ap2ID": 1745163322937
                },
                {
                    "ap1Name": "result",
                    "ap2Name": "x",
                    "ap2Primary": false,
                    "ap1ID": 1745163350087,
                    "ap2ID": 1745163343021
                },
                {
                    "ap1Name": "result",
                    "ap2Name": "x",
                    "ap2Primary": false,
                    "ap1ID": 1745163350087,
                    "ap2ID": 1745359540396
                },
                {
                    "ap1Name": "geometry",
                    "ap2Name": "number or geometry",
                    "ap2Primary": false,
                    "ap1ID": 1745163375568,
                    "ap2ID": 1745162618702
                },
                {
                    "ap1Name": "result",
                    "ap2Name": "xDist",
                    "ap2Primary": false,
                    "ap1ID": 1745359394075,
                    "ap2ID": 1745359415373
                },
                {
                    "ap1Name": "geometry",
                    "ap2Name": "Shape 3",
                    "ap2Primary": false,
                    "ap1ID": 1745359415373,
                    "ap2ID": 1745163210640
                },
                {
                    "ap1Name": "result",
                    "ap2Name": "yDist",
                    "ap2Primary": false,
                    "ap1ID": 1745359540396,
                    "ap2ID": 1745359549690
                },
                {
                    "ap1Name": "geometry",
                    "ap2Name": "Shape 3",
                    "ap2Primary": false,
                    "ap1ID": 1745359549690,
                    "ap2ID": 1745163375568
                }
            ],
            "fileTypeVersion": 1,
            "compiledBom": []
        },
        {
            "atomType": "Molecule",
            "name": "Apron",
            "x": 0.3082191780821918,
            "y": 0.7470997679814385,
            "uniqueID": 1745162799100,
            "ioValues": [
                {
                    "name": "Wood thickness",
                    "ioValue": 0.7
                },
                {
                    "name": "table height",
                    "ioValue": 18
                },
                {
                    "name": "table width",
                    "ioValue": 15
                },
                {
                    "name": "table length",
                    "ioValue": 30
                }
            ],
            "description": "Molecules provide an organizational structure to contain atoms. Double click on a molecule to enter it. Use the up arrow in the upper right hand corner of the screen to go up one level.",
            "topLevel": false,
            "allAtoms": [
                {
                    "atomType": "Output",
                    "name": "Output",
                    "x": 0.98,
                    "y": 0.5,
                    "uniqueID": 1745162798863,
                    "ioValues": [
                        {
                            "name": "number or geometry",
                            "ioValue": 1745359775761
                        }
                    ],
                    "description": "Connect geometry here to make it available in the next level up. "
                },
                {
                    "atomType": "Input",
                    "name": "Wood thickness",
                    "x": 0.04,
                    "y": 0.8614457831325302,
                    "uniqueID": 1745162799381,
                    "ioValues": [],
                    "description": "Adds an input to the parent molecule. If the parent molecule is the top level of the project then the input will be available when the project is shared or imported into another project. Name is editable"
                },
                {
                    "atomType": "Input",
                    "name": "table height",
                    "x": 0.04,
                    "y": 0.7078313253012049,
                    "uniqueID": 1745162799360,
                    "ioValues": [],
                    "description": "Adds an input to the parent molecule. If the parent molecule is the top level of the project then the input will be available when the project is shared or imported into another project. Name is editable"
                },
                {
                    "atomType": "Input",
                    "name": "table width",
                    "x": 0.04,
                    "y": 0.5542168674698795,
                    "uniqueID": 1745162799091,
                    "ioValues": [],
                    "description": "Adds an input to the parent molecule. If the parent molecule is the top level of the project then the input will be available when the project is shared or imported into another project. Name is editable"
                },
                {
                    "atomType": "Input",
                    "name": "table length",
                    "x": 0.04,
                    "y": 0.42168674698795183,
                    "uniqueID": 1745162799519,
                    "ioValues": [],
                    "description": "Adds an input to the parent molecule. If the parent molecule is the top level of the project then the input will be available when the project is shared or imported into another project. Name is editable"
                },
                {
                    "atomType": "Rectangle",
                    "name": "Rectangle",
                    "x": 0.18673050615595077,
                    "y": 0.2680722891566265,
                    "uniqueID": 1745359640458,
                    "ioValues": [
                        {
                            "name": "x length",
                            "ioValue": 2.5
                        },
                        {
                            "name": "y length",
                            "ioValue": 14
                        }
                    ],
                    "description": "Creates a new rectangle."
                },
                {
                    "atomType": "Extrude",
                    "name": "Extrude",
                    "x": 0.26744186046511625,
                    "y": 0.3253012048192771,
                    "uniqueID": 1745359644079,
                    "ioValues": [
                        {
                            "name": "geometry",
                            "ioValue": 1745359640458
                        },
                        {
                            "name": "height",
                            "ioValue": 0.7
                        }
                    ],
                    "description": "Extrudes a 2D shape. Input can be negitive. "
                },
                {
                    "atomType": "Rotate",
                    "name": "Rotate",
                    "x": 0.5276243093922652,
                    "y": 0.29518072289156627,
                    "uniqueID": 1745359673536,
                    "ioValues": [
                        {
                            "name": "geometry",
                            "ioValue": 1745360477454
                        },
                        {
                            "name": "x-axis degrees",
                            "ioValue": 90
                        },
                        {
                            "name": "y-axis degrees",
                            "ioValue": 0
                        },
                        {
                            "name": "z-axis degrees",
                            "ioValue": -90
                        }
                    ],
                    "description": "Rotates the input geometry around the X, Y, or Z axis. Inputs are degrees."
                },
                {
                    "atomType": "Move",
                    "name": "Move",
                    "x": 0.6356673960612691,
                    "y": 0.3855421686746988,
                    "uniqueID": 1745359687404,
                    "ioValues": [
                        {
                            "name": "geometry",
                            "ioValue": 1745359673536
                        },
                        {
                            "name": "xDist",
                            "ioValue": -14
                        },
                        {
                            "name": "yDist",
                            "ioValue": 0
                        },
                        {
                            "name": "zDist",
                            "ioValue": 0
                        }
                    ],
                    "description": "Moves a shape laterally in X, Y, Z."
                },
                {
                    "atomType": "Move",
                    "name": "Move",
                    "x": 0.6980306345733042,
                    "y": 0.1686746987951807,
                    "uniqueID": 1745359692045,
                    "ioValues": [
                        {
                            "name": "geometry",
                            "ioValue": 1745359673536
                        },
                        {
                            "name": "xDist",
                            "ioValue": 14
                        },
                        {
                            "name": "yDist",
                            "ioValue": 0
                        },
                        {
                            "name": "zDist",
                            "ioValue": 0
                        }
                    ],
                    "description": "Moves a shape laterally in X, Y, Z."
                },
                {
                    "atomType": "Assembly",
                    "name": "Assembly",
                    "x": 0.725382932166302,
                    "y": 0.6265060240963854,
                    "uniqueID": 1745359700204,
                    "ioValues": [
                        {
                            "name": "Shape 1",
                            "ioValue": 1745359692045
                        },
                        {
                            "name": "Shape 2",
                            "ioValue": 1745359687404
                        },
                        {
                            "name": "Shape 3",
                            "ioValue": 1745359906242
                        }
                    ],
                    "description": "Pick between assembly and fusion to join input geometries. Assembly takes multiple shapes together into one, shapes higher in the inputs list will cut into shapes lower on the input list where they overlap. Fusion takes all shapes or sketches and fuses them permanently into a single shape"
                },
                {
                    "atomType": "Equation",
                    "name": "x /2 - 1",
                    "x": 0.5229759299781181,
                    "y": 0.10843373493975905,
                    "uniqueID": 1745359713330,
                    "ioValues": [
                        {
                            "name": "x",
                            "ioValue": 30
                        }
                    ],
                    "description": "Defines a mathematical equation. Edit the output field to add or remove inputs.",
                    "currentEquation": "x /2 - 1"
                },
                {
                    "atomType": "Equation",
                    "name": "-x /2 + 1",
                    "x": 0.3926128590971272,
                    "y": 0.4759036144578313,
                    "uniqueID": 1745359721801,
                    "ioValues": [
                        {
                            "name": "x",
                            "ioValue": 30
                        }
                    ],
                    "description": "Defines a mathematical equation. Edit the output field to add or remove inputs.",
                    "currentEquation": "-x /2 + 1"
                },
                {
                    "atomType": "Rotate",
                    "name": "Rotate",
                    "x": 0.8011049723756906,
                    "y": 0.7168674698795181,
                    "uniqueID": 1745359769125,
                    "ioValues": [
                        {
                            "name": "geometry",
                            "ioValue": 1745359700204
                        },
                        {
                            "name": "x-axis degrees",
                            "ioValue": 0
                        },
                        {
                            "name": "y-axis degrees",
                            "ioValue": 0
                        },
                        {
                            "name": "z-axis degrees",
                            "ioValue": 0
                        }
                    ],
                    "description": "Rotates the input geometry around the X, Y, or Z axis. Inputs are degrees."
                },
                {
                    "atomType": "Move",
                    "name": "Move",
                    "x": 0.8632010943912449,
                    "y": 0.28313253012048195,
                    "uniqueID": 1745359775761,
                    "ioValues": [
                        {
                            "name": "geometry",
                            "ioValue": 1745359769125
                        },
                        {
                            "name": "xDist",
                            "ioValue": 0
                        },
                        {
                            "name": "yDist",
                            "ioValue": 0
                        },
                        {
                            "name": "zDist",
                            "ioValue": 16.75
                        }
                    ],
                    "description": "Moves a shape laterally in X, Y, Z."
                },
                {
                    "atomType": "Rectangle",
                    "name": "Rectangle",
                    "x": 0.20177838577291382,
                    "y": 0.7590361445783133,
                    "uniqueID": 1745359851202,
                    "ioValues": [
                        {
                            "name": "x length",
                            "ioValue": 30
                        },
                        {
                            "name": "y length",
                            "ioValue": 2.5
                        }
                    ],
                    "description": "Creates a new rectangle."
                },
                {
                    "atomType": "Extrude",
                    "name": "Extrude",
                    "x": 0.2783857729138167,
                    "y": 0.6716867469879517,
                    "uniqueID": 1745359879510,
                    "ioValues": [
                        {
                            "name": "geometry",
                            "ioValue": 1745359851202
                        },
                        {
                            "name": "height",
                            "ioValue": 0.7
                        }
                    ],
                    "description": "Extrudes a 2D shape. Input can be negitive. "
                },
                {
                    "atomType": "Rotate",
                    "name": "Rotate",
                    "x": 0.4692202462380301,
                    "y": 0.7078313253012049,
                    "uniqueID": 1745359888697,
                    "ioValues": [
                        {
                            "name": "geometry",
                            "ioValue": 1745360230341
                        },
                        {
                            "name": "x-axis degrees",
                            "ioValue": 90
                        },
                        {
                            "name": "y-axis degrees",
                            "ioValue": 0
                        },
                        {
                            "name": "z-axis degrees",
                            "ioValue": 0
                        }
                    ],
                    "description": "Rotates the input geometry around the X, Y, or Z axis. Inputs are degrees."
                },
                {
                    "atomType": "Move",
                    "name": "Move",
                    "x": 0.5533515731874145,
                    "y": 0.6716867469879517,
                    "uniqueID": 1745359906242,
                    "ioValues": [
                        {
                            "name": "geometry",
                            "ioValue": 1745359888697
                        },
                        {
                            "name": "xDist",
                            "ioValue": 0
                        },
                        {
                            "name": "yDist",
                            "ioValue": 0
                        },
                        {
                            "name": "zDist",
                            "ioValue": 0
                        }
                    ],
                    "description": "Moves a shape laterally in X, Y, Z."
                },
                {
                    "atomType": "GitHubMolecule",
                    "name": "tenon-cutter",
                    "x": 0.39398084815321477,
                    "y": 0.8584337349397589,
                    "uniqueID": 1745360230341,
                    "ioValues": [
                        {
                            "name": "geometry",
                            "ioValue": 1745359879510
                        },
                        {
                            "name": "piece thickness",
                            "ioValue": 0.75
                        }
                    ],
                    "description": "Molecules provide an organizational structure to contain atoms. Double click on a molecule to enter it. Use the up arrow in the upper right hand corner of the screen to go up one level.",
                    "topLevel": false,
                    "allAtoms": [
                        {
                            "atomType": "Output",
                            "name": "Output",
                            "x": 0.98,
                            "y": 0.5,
                            "uniqueID": 1745360230517,
                            "ioValues": [
                                {
                                    "name": "number or geometry",
                                    "ioValue": 1745360230189
                                }
                            ],
                            "description": "Connect geometry here to make it available in the next level up. "
                        },
                        {
                            "atomType": "Input",
                            "name": "geometry",
                            "x": 0.04,
                            "y": 0.6330275229357799,
                            "uniqueID": 1745360230714,
                            "ioValues": [],
                            "description": "Adds an input to the parent molecule. If the parent molecule is the top level of the project then the input will be available when the project is shared or imported into another project. Name is editable",
                            "type": "number"
                        },
                        {
                            "atomType": "Code",
                            "name": "Code",
                            "x": 0.4394250513347023,
                            "y": 0.36085626911314983,
                            "uniqueID": 1745360230163,
                            "ioValues": [
                                {
                                    "name": "inputShape",
                                    "ioValue": 1745359879510
                                },
                                {
                                    "name": "dist",
                                    "ioValue": 10
                                },
                                {
                                    "name": "height",
                                    "ioValue": 10
                                },
                                {
                                    "name": "thickness",
                                    "ioValue": 0.75
                                }
                            ],
                            "description": "Defines a Replicad code block.",
                            "codeVersion": 1,
                            "code": " \n      //Inputs:[inputShape, dist, height, thickness]\n      //This defines the molecules inputs and creates variables with the same names which can be referenced in the code\n      \n      //Takes the address and gets the shape from the library\n      let importedShape = library[inputShape]\n\n    \n      \n      //This makes a new copy of of the shape (to prevent garbage collection issues),\n      //and moves it in the X direction. Note that this will not work if the input is an assembly\n      let movedShape = importedShape.geometry[0].clone().translate([dist,0,0])\n      \n      //Console.log works for debugging to better see what is happening under the hood\n      console.log(\"Shape:\")\n      console.log(importedShape.geometry[0].boundingBox);\n\nfunction getSplitEdgeBoxes(bounds) {\n  const [min, max] = bounds;\n  const [x1, y1] = min;\n  const [x2, y2] = max;\n\n  const width = Math.abs(x2 - x1);\n  const height = Math.abs(y2 - y1);\n  const left = Math.min(x1, x2);\n  const top = Math.min(y1, y2);\n\n  const longestSide = Math.max(width, height);\n  const edgeThickness = thickness\n\n  const boxes = [];\n\n  // Horizontal edges (top + bottom): split width into thirds\n  const thirdWidth = width / 3;\n\n  // Vertical edges (left + right): split height into thirds\n  const thirdHeight = height / 3;\n\n  // Left top\n  boxes.push({\n    side: \"left-top\",\n    center: {\n      x: left + edgeThickness / 2,\n      y: top + thirdHeight / 2\n    },\n    size: {\n      width: edgeThickness,\n      height: thirdHeight\n    }\n  });\n\n  // Left bottom\n  boxes.push({\n    side: \"left-bottom\",\n    center: {\n      x: left + edgeThickness / 2,\n      y: top + height - thirdHeight / 2\n    },\n    size: {\n      width: edgeThickness,\n      height: thirdHeight\n    }\n  });\n\n  // Right top\n  boxes.push({\n    side: \"right-top\",\n    center: {\n      x: left + width - edgeThickness / 2,\n      y: top + thirdHeight / 2\n    },\n    size: {\n      width: edgeThickness,\n      height: thirdHeight\n    }\n  });\n\n  // Right bottom\n  boxes.push({\n    side: \"right-bottom\",\n    center: {\n      x: left + width - edgeThickness / 2,\n      y: top + height - thirdHeight / 2\n    },\n    size: {\n      width: edgeThickness,\n      height: thirdHeight\n    }\n  });\n  console.log(boxes)\n  return boxes;\n}\n\n      \n      let tenonBoxes = getSplitEdgeBoxes(importedShape.geometry[0].boundingBox.bounds)\n      //Shapes stored in the library have tags, a color, a plane, and a bill of materials like this. We don't modify them here\n      let shape1 = {\n        geometry: [movedShape],\n        tags: importedShape.tags,\n        color: importedShape.color,\n        plane: importedShape.plane,\n        bom: importedShape.bom\n      }\n\nlet assemblyArray = []\n const newPlane = new Plane().pivot(0, 'Y');\n\n tenonBoxes.forEach ((box) => {\n   console.log(box)\n    let createdRectangle = replicad.drawRectangle(box.size.width, box.size.height)\n  \n   let createdShape = createdRectangle.sketchOnPlane(newPlane).extrude(height)\n    //For our new geometry we need to define the tags, color, plane, etc\n   let tenonShape = {\n          geometry: [createdShape.translate([box.center.x,box.center.y,0])], \n          tags: [\"aTag\"],\n          color: '#A3CE5B',\n          plane: newPlane,\n          bom: []\n      }\n    assemblyArray.push(tenonShape)\n  });\n\nconsole.log(assemblyArray)\n      \n      \n      //Then we can return our created shape in just the same way\n      //return shape2\n      \n      //If we want to return both shapes at once, we can create an assembly with them\n      let anAssembly = {\n        geometry: assemblyArray, \n        tags: [\"aNewTag\"],\n        color: '#A3CF5B',\n        plane: newPlane,\n        bom: []\n      }\n      \n      //And we can return that in the same way\n      return anAssembly\n      \n      \n          /**\n          To Use the Code Atom, enter your inputs to the input list a.e Inputs:[shape, height]\n          If your input is connected to another atom with a replicad geometry you can access its geometry by looking up its ID in your library. a.e library[Input1].geometry[0] \n          Use any replicad available methods to modify your geometry. Learn more about all of the available methods at \n          https://replicad.xyz/docs/introapp/UserGuide.html \n          Return a replicad object that includes geometry, color, tags and plane. \n      \n      \n          Example Code Atom:\n      \n            Inputs:[shape, x];\n      \n            let finalShape = library[shape].geometry[0].clone.translate[x,0,0]\n      \n            return {geometry: finalShape, color: library[shape].color, plane: library[shape].plane, tags: library[shape].tags }\n      \n            - See more examples at _______ \n      \n      \n          */\n      "
                        },
                        {
                            "atomType": "Rectangle",
                            "name": "Rectangle",
                            "x": 0.13065755764304013,
                            "y": 0.3027522935779816,
                            "uniqueID": 1745360230450,
                            "ioValues": [
                                {
                                    "name": "x length",
                                    "ioValue": 30
                                },
                                {
                                    "name": "y length",
                                    "ioValue": 5
                                }
                            ],
                            "description": "Creates a new rectangle."
                        },
                        {
                            "atomType": "Extrude",
                            "name": "Extrude",
                            "x": 0.25362937660119556,
                            "y": 0.3058103975535168,
                            "uniqueID": 1745360230814,
                            "ioValues": [
                                {
                                    "name": "geometry",
                                    "ioValue": 1745360230450
                                },
                                {
                                    "name": "height",
                                    "ioValue": 3
                                }
                            ],
                            "description": "Extrudes a 2D shape. Input can be negitive. "
                        },
                        {
                            "atomType": "Assembly",
                            "name": "Assembly",
                            "x": 0.6396303901437372,
                            "y": 0.654434250764526,
                            "uniqueID": 1745360230534,
                            "ioValues": [
                                {
                                    "name": "Shape 3",
                                    "ioValue": 1745360230090
                                },
                                {
                                    "name": "Shape 4",
                                    "ioValue": 1745360230163
                                }
                            ],
                            "description": "Pick between assembly and fusion to join input geometries. Assembly takes multiple shapes together into one, shapes higher in the inputs list will cut into shapes lower on the input list where they overlap. Fusion takes all shapes or sketches and fuses them permanently into a single shape"
                        },
                        {
                            "atomType": "Tag",
                            "name": "piece",
                            "x": 0.3870636550308008,
                            "y": 0.691131498470948,
                            "uniqueID": 1745360230090,
                            "ioValues": [
                                {
                                    "name": "geometry",
                                    "ioValue": 1745359879510
                                }
                            ],
                            "description": "Tags geometry so that it can be extracted later.",
                            "tags": [
                                "piece"
                            ]
                        },
                        {
                            "atomType": "ExtractTag",
                            "name": "Extract Tag",
                            "x": 0.7997946611909651,
                            "y": 0.5565749235474006,
                            "uniqueID": 1745360230189,
                            "ioValues": [
                                {
                                    "name": "geometry",
                                    "ioValue": 1745360230534
                                }
                            ],
                            "description": "Extracts geometry containing the specified tag.",
                            "tag": "piece",
                            "tagIndex": 0
                        },
                        {
                            "atomType": "Input",
                            "name": "piece thickness",
                            "x": 0.04,
                            "y": 0.7920489296636086,
                            "uniqueID": 1745360230276,
                            "ioValues": [],
                            "description": "Adds an input to the parent molecule. If the parent molecule is the top level of the project then the input will be available when the project is shared or imported into another project. Name is editable",
                            "type": "number"
                        },
                        {
                            "atomType": "Code",
                            "name": "Code",
                            "x": 0.5390143737166325,
                            "y": 0.8195718654434251,
                            "uniqueID": 1745360230296,
                            "ioValues": [
                                {
                                    "name": "inputShape",
                                    "ioValue": 1745360230814
                                },
                                {
                                    "name": "dist",
                                    "ioValue": 10
                                },
                                {
                                    "name": "height",
                                    "ioValue": 10
                                }
                            ],
                            "description": "Defines a Replicad code block.",
                            "codeVersion": 1,
                            "code": " \n      //Inputs:[inputShape, dist, height]\n      //This defines the molecules inputs and creates variables with the same names which can be referenced in the code\n      \n      //Takes the address and gets the shape from the library\n      let importedShape = library[inputShape]\n      \n      \n      let center = importedShape.geometry[0].boundingBox.center\n      let scaledShape = importedShape.geometry[0].clone.scale([0,0],1.1)\n     console.log(center)\n      //Shapes stored in the library have tags, a color, a plane, and a bill of materials like this. We don't modify them here\n      let shape1 = {\n        geometry: [scaledShape],\n        tags: importedShape.tags,\n        color: importedShape.color,\n        plane: importedShape.plane,\n        bom: importedShape.bom\n      }\n      \n      \n      \n      //And we can return that in the same way\n      return shape1\n      \n      \n          /**\n          To Use the Code Atom, enter your inputs to the input list a.e Inputs:[shape, height]\n          If your input is connected to another atom with a replicad geometry you can access its geometry by looking up its ID in your library. a.e library[Input1].geometry[0] \n          Use any replicad available methods to modify your geometry. Learn more about all of the available methods at \n          https://replicad.xyz/docs/introapp/UserGuide.html \n          Return a replicad object that includes geometry, color, tags and plane. \n      \n      \n          Example Code Atom:\n      \n            Inputs:[shape, x];\n      \n            let finalShape = library[shape].geometry[0].clone.translate[x,0,0]\n      \n            return {geometry: finalShape, color: library[shape].color, plane: library[shape].plane, tags: library[shape].tags }\n      \n            - See more examples at _______ \n      \n      \n          */\n      "
                        }
                    ],
                    "allConnectors": [
                        {
                            "ap1Name": "number or geometry",
                            "ap2Name": "inputShape",
                            "ap2Primary": false,
                            "ap1ID": 1745360230714,
                            "ap2ID": 1745360230163
                        },
                        {
                            "ap1Name": "number or geometry",
                            "ap2Name": "geometry",
                            "ap2Primary": true,
                            "ap1ID": 1745360230714,
                            "ap2ID": 1745360230090
                        },
                        {
                            "ap1Name": "geometry",
                            "ap2Name": "Shape 4",
                            "ap2Primary": false,
                            "ap1ID": 1745360230163,
                            "ap2ID": 1745360230534
                        },
                        {
                            "ap1Name": "geometry",
                            "ap2Name": "geometry",
                            "ap2Primary": true,
                            "ap1ID": 1745360230450,
                            "ap2ID": 1745360230814
                        },
                        {
                            "ap1Name": "geometry",
                            "ap2Name": "inputShape",
                            "ap2Primary": false,
                            "ap1ID": 1745360230814,
                            "ap2ID": 1745360230296
                        },
                        {
                            "ap1Name": "geometry",
                            "ap2Name": "geometry",
                            "ap2Primary": true,
                            "ap1ID": 1745360230534,
                            "ap2ID": 1745360230189
                        },
                        {
                            "ap1Name": "geometry",
                            "ap2Name": "Shape 3",
                            "ap2Primary": false,
                            "ap1ID": 1745360230090,
                            "ap2ID": 1745360230534
                        },
                        {
                            "ap1Name": "geometry",
                            "ap2Name": "number or geometry",
                            "ap2Primary": false,
                            "ap1ID": 1745360230189,
                            "ap2ID": 1745360230517
                        },
                        {
                            "ap1Name": "number or geometry",
                            "ap2Name": "thickness",
                            "ap2Primary": false,
                            "ap1ID": 1745360230276,
                            "ap2ID": 1745360230163
                        }
                    ],
                    "parentRepo": {
                        "privateRepo": false,
                        "repoName": "tenon-cutter",
                        "dateCreated": "2025-04-09T14:57:22Z",
                        "readMe": "https://raw.githubusercontent.com/alzatin/tenon-cutter/master/README.md?sanitize=true",
                        "yyyy": 2025,
                        "topMoleculeID": 1744210642818,
                        "githubMoleculesUsed": [],
                        "html_url": "https://github.com/alzatin/tenon-cutter",
                        "topics": [
                            "abundance-tool"
                        ],
                        "parentRepo": null,
                        "forks": 0,
                        "dateModified": "739350",
                        "ranking": 0,
                        "searchField": "tenon-cutter alzatin  abundance-tool",
                        "owner": "alzatin",
                        "description": "",
                        "contentURL": "https://raw.githubusercontent.com/alzatin/tenon-cutter/master/project.abundance?sanitize=true",
                        "svgURL": "https://raw.githubusercontent.com/alzatin/tenon-cutter/master/project.svg?sanitize=true"
                    },
                    "unitsKey": "Inches",
                    "fileTypeVersion": 1,
                    "compiledBom": []
                },
                {
                    "atomType": "GitHubMolecule",
                    "name": "tenon-cutter",
                    "x": 0.43922651933701656,
                    "y": 0.2891566265060241,
                    "uniqueID": 1745360477454,
                    "ioValues": [
                        {
                            "name": "geometry",
                            "ioValue": 1745361118702
                        },
                        {
                            "name": "piece thickness",
                            "ioValue": 0.75
                        }
                    ],
                    "description": "Molecules provide an organizational structure to contain atoms. Double click on a molecule to enter it. Use the up arrow in the upper right hand corner of the screen to go up one level.",
                    "topLevel": false,
                    "allAtoms": [
                        {
                            "atomType": "Output",
                            "name": "Output",
                            "x": 0.98,
                            "y": 0.5,
                            "uniqueID": 1745360477165,
                            "ioValues": [
                                {
                                    "name": "number or geometry",
                                    "ioValue": 1745360477504
                                }
                            ],
                            "description": "Connect geometry here to make it available in the next level up. "
                        },
                        {
                            "atomType": "Input",
                            "name": "geometry",
                            "x": 0.04,
                            "y": 0.6330275229357799,
                            "uniqueID": 1745360477292,
                            "ioValues": [],
                            "description": "Adds an input to the parent molecule. If the parent molecule is the top level of the project then the input will be available when the project is shared or imported into another project. Name is editable",
                            "type": "number"
                        },
                        {
                            "atomType": "Code",
                            "name": "Code",
                            "x": 0.4394250513347023,
                            "y": 0.36085626911314983,
                            "uniqueID": 1745360476699,
                            "ioValues": [
                                {
                                    "name": "inputShape",
                                    "ioValue": 1745361118702
                                },
                                {
                                    "name": "dist",
                                    "ioValue": 10
                                },
                                {
                                    "name": "height",
                                    "ioValue": 10
                                },
                                {
                                    "name": "thickness",
                                    "ioValue": 0.75
                                }
                            ],
                            "description": "Defines a Replicad code block.",
                            "codeVersion": 1,
                            "code": " \n      //Inputs:[inputShape, dist, height, thickness]\n      //This defines the molecules inputs and creates variables with the same names which can be referenced in the code\n      \n      //Takes the address and gets the shape from the library\n      let importedShape = library[inputShape]\n\n    \n      \n      //This makes a new copy of of the shape (to prevent garbage collection issues),\n      //and moves it in the X direction. Note that this will not work if the input is an assembly\n      let movedShape = importedShape.geometry[0].clone().translate([dist,0,0])\n      \n      //Console.log works for debugging to better see what is happening under the hood\n      console.log(\"Shape:\")\n      console.log(importedShape.geometry[0].boundingBox);\n\nfunction getSplitEdgeBoxes(bounds) {\n  const [min, max] = bounds;\n  const [x1, y1] = min;\n  const [x2, y2] = max;\n\n  const width = Math.abs(x2 - x1);\n  const height = Math.abs(y2 - y1);\n  const left = Math.min(x1, x2);\n  const top = Math.min(y1, y2);\n\n  const longestSide = Math.max(width, height);\n  const edgeThickness = thickness\n\n  const boxes = [];\n\n  // Horizontal edges (top + bottom): split width into thirds\n  const thirdWidth = width / 3;\n\n  // Vertical edges (left + right): split height into thirds\n  const thirdHeight = height / 3;\n\n  // Left top\n  boxes.push({\n    side: \"left-top\",\n    center: {\n      x: left + edgeThickness / 2,\n      y: top + thirdHeight / 2\n    },\n    size: {\n      width: edgeThickness,\n      height: thirdHeight\n    }\n  });\n\n  // Left bottom\n  boxes.push({\n    side: \"left-bottom\",\n    center: {\n      x: left + edgeThickness / 2,\n      y: top + height - thirdHeight / 2\n    },\n    size: {\n      width: edgeThickness,\n      height: thirdHeight\n    }\n  });\n\n  // Right top\n  boxes.push({\n    side: \"right-top\",\n    center: {\n      x: left + width - edgeThickness / 2,\n      y: top + thirdHeight / 2\n    },\n    size: {\n      width: edgeThickness,\n      height: thirdHeight\n    }\n  });\n\n  // Right bottom\n  boxes.push({\n    side: \"right-bottom\",\n    center: {\n      x: left + width - edgeThickness / 2,\n      y: top + height - thirdHeight / 2\n    },\n    size: {\n      width: edgeThickness,\n      height: thirdHeight\n    }\n  });\n  console.log(boxes)\n  return boxes;\n}\n\n      \n      let tenonBoxes = getSplitEdgeBoxes(importedShape.geometry[0].boundingBox.bounds)\n      //Shapes stored in the library have tags, a color, a plane, and a bill of materials like this. We don't modify them here\n      let shape1 = {\n        geometry: [movedShape],\n        tags: importedShape.tags,\n        color: importedShape.color,\n        plane: importedShape.plane,\n        bom: importedShape.bom\n      }\n\nlet assemblyArray = []\n const newPlane = new Plane().pivot(0, 'Y');\n\n tenonBoxes.forEach ((box) => {\n   console.log(box)\n    let createdRectangle = replicad.drawRectangle(box.size.width, box.size.height)\n  \n   let createdShape = createdRectangle.sketchOnPlane(newPlane).extrude(height)\n    //For our new geometry we need to define the tags, color, plane, etc\n   let tenonShape = {\n          geometry: [createdShape.translate([box.center.x,box.center.y,0])], \n          tags: [\"aTag\"],\n          color: '#A3CE5B',\n          plane: newPlane,\n          bom: []\n      }\n    assemblyArray.push(tenonShape)\n  });\n\nconsole.log(assemblyArray)\n      \n      \n      //Then we can return our created shape in just the same way\n      //return shape2\n      \n      //If we want to return both shapes at once, we can create an assembly with them\n      let anAssembly = {\n        geometry: assemblyArray, \n        tags: [\"aNewTag\"],\n        color: '#A3CF5B',\n        plane: newPlane,\n        bom: []\n      }\n      \n      //And we can return that in the same way\n      return anAssembly\n      \n      \n          /**\n          To Use the Code Atom, enter your inputs to the input list a.e Inputs:[shape, height]\n          If your input is connected to another atom with a replicad geometry you can access its geometry by looking up its ID in your library. a.e library[Input1].geometry[0] \n          Use any replicad available methods to modify your geometry. Learn more about all of the available methods at \n          https://replicad.xyz/docs/introapp/UserGuide.html \n          Return a replicad object that includes geometry, color, tags and plane. \n      \n      \n          Example Code Atom:\n      \n            Inputs:[shape, x];\n      \n            let finalShape = library[shape].geometry[0].clone.translate[x,0,0]\n      \n            return {geometry: finalShape, color: library[shape].color, plane: library[shape].plane, tags: library[shape].tags }\n      \n            - See more examples at _______ \n      \n      \n          */\n      "
                        },
                        {
                            "atomType": "Rectangle",
                            "name": "Rectangle",
                            "x": 0.13065755764304013,
                            "y": 0.3027522935779816,
                            "uniqueID": 1745360476624,
                            "ioValues": [
                                {
                                    "name": "x length",
                                    "ioValue": 30
                                },
                                {
                                    "name": "y length",
                                    "ioValue": 5
                                }
                            ],
                            "description": "Creates a new rectangle."
                        },
                        {
                            "atomType": "Extrude",
                            "name": "Extrude",
                            "x": 0.25362937660119556,
                            "y": 0.3058103975535168,
                            "uniqueID": 1745360477118,
                            "ioValues": [
                                {
                                    "name": "geometry",
                                    "ioValue": 1745360476624
                                },
                                {
                                    "name": "height",
                                    "ioValue": 3
                                }
                            ],
                            "description": "Extrudes a 2D shape. Input can be negitive. "
                        },
                        {
                            "atomType": "Assembly",
                            "name": "Assembly",
                            "x": 0.6396303901437372,
                            "y": 0.654434250764526,
                            "uniqueID": 1745360476931,
                            "ioValues": [
                                {
                                    "name": "Shape 3",
                                    "ioValue": 1745360476968
                                },
                                {
                                    "name": "Shape 4",
                                    "ioValue": 1745360476699
                                }
                            ],
                            "description": "Pick between assembly and fusion to join input geometries. Assembly takes multiple shapes together into one, shapes higher in the inputs list will cut into shapes lower on the input list where they overlap. Fusion takes all shapes or sketches and fuses them permanently into a single shape"
                        },
                        {
                            "atomType": "Tag",
                            "name": "piece",
                            "x": 0.3870636550308008,
                            "y": 0.691131498470948,
                            "uniqueID": 1745360476968,
                            "ioValues": [
                                {
                                    "name": "geometry",
                                    "ioValue": 1745361118702
                                }
                            ],
                            "description": "Tags geometry so that it can be extracted later.",
                            "tags": [
                                "piece"
                            ]
                        },
                        {
                            "atomType": "ExtractTag",
                            "name": "Extract Tag",
                            "x": 0.7997946611909651,
                            "y": 0.5565749235474006,
                            "uniqueID": 1745360477504,
                            "ioValues": [
                                {
                                    "name": "geometry",
                                    "ioValue": 1745360476931
                                }
                            ],
                            "description": "Extracts geometry containing the specified tag.",
                            "tag": "piece",
                            "tagIndex": 0
                        },
                        {
                            "atomType": "Input",
                            "name": "piece thickness",
                            "x": 0.04,
                            "y": 0.7920489296636086,
                            "uniqueID": 1745360477238,
                            "ioValues": [],
                            "description": "Adds an input to the parent molecule. If the parent molecule is the top level of the project then the input will be available when the project is shared or imported into another project. Name is editable",
                            "type": "number"
                        },
                        {
                            "atomType": "Code",
                            "name": "Code",
                            "x": 0.5390143737166325,
                            "y": 0.8195718654434251,
                            "uniqueID": 1745360476545,
                            "ioValues": [
                                {
                                    "name": "inputShape",
                                    "ioValue": 1745360477118
                                },
                                {
                                    "name": "dist",
                                    "ioValue": 10
                                },
                                {
                                    "name": "height",
                                    "ioValue": 10
                                }
                            ],
                            "description": "Defines a Replicad code block.",
                            "codeVersion": 1,
                            "code": " \n      //Inputs:[inputShape, dist, height]\n      //This defines the molecules inputs and creates variables with the same names which can be referenced in the code\n      \n      //Takes the address and gets the shape from the library\n      let importedShape = library[inputShape]\n      \n      \n      let center = importedShape.geometry[0].boundingBox.center\n      let scaledShape = importedShape.geometry[0].clone.scale([0,0],1.1)\n     console.log(center)\n      //Shapes stored in the library have tags, a color, a plane, and a bill of materials like this. We don't modify them here\n      let shape1 = {\n        geometry: [scaledShape],\n        tags: importedShape.tags,\n        color: importedShape.color,\n        plane: importedShape.plane,\n        bom: importedShape.bom\n      }\n      \n      \n      \n      //And we can return that in the same way\n      return shape1\n      \n      \n          /**\n          To Use the Code Atom, enter your inputs to the input list a.e Inputs:[shape, height]\n          If your input is connected to another atom with a replicad geometry you can access its geometry by looking up its ID in your library. a.e library[Input1].geometry[0] \n          Use any replicad available methods to modify your geometry. Learn more about all of the available methods at \n          https://replicad.xyz/docs/introapp/UserGuide.html \n          Return a replicad object that includes geometry, color, tags and plane. \n      \n      \n          Example Code Atom:\n      \n            Inputs:[shape, x];\n      \n            let finalShape = library[shape].geometry[0].clone.translate[x,0,0]\n      \n            return {geometry: finalShape, color: library[shape].color, plane: library[shape].plane, tags: library[shape].tags }\n      \n            - See more examples at _______ \n      \n      \n          */\n      "
                        }
                    ],
                    "allConnectors": [
                        {
                            "ap1Name": "number or geometry",
                            "ap2Name": "inputShape",
                            "ap2Primary": false,
                            "ap1ID": 1745360477292,
                            "ap2ID": 1745360476699
                        },
                        {
                            "ap1Name": "number or geometry",
                            "ap2Name": "geometry",
                            "ap2Primary": true,
                            "ap1ID": 1745360477292,
                            "ap2ID": 1745360476968
                        },
                        {
                            "ap1Name": "geometry",
                            "ap2Name": "Shape 4",
                            "ap2Primary": false,
                            "ap1ID": 1745360476699,
                            "ap2ID": 1745360476931
                        },
                        {
                            "ap1Name": "geometry",
                            "ap2Name": "geometry",
                            "ap2Primary": true,
                            "ap1ID": 1745360476624,
                            "ap2ID": 1745360477118
                        },
                        {
                            "ap1Name": "geometry",
                            "ap2Name": "inputShape",
                            "ap2Primary": false,
                            "ap1ID": 1745360477118,
                            "ap2ID": 1745360476545
                        },
                        {
                            "ap1Name": "geometry",
                            "ap2Name": "geometry",
                            "ap2Primary": true,
                            "ap1ID": 1745360476931,
                            "ap2ID": 1745360477504
                        },
                        {
                            "ap1Name": "geometry",
                            "ap2Name": "Shape 3",
                            "ap2Primary": false,
                            "ap1ID": 1745360476968,
                            "ap2ID": 1745360476931
                        },
                        {
                            "ap1Name": "geometry",
                            "ap2Name": "number or geometry",
                            "ap2Primary": false,
                            "ap1ID": 1745360477504,
                            "ap2ID": 1745360477165
                        },
                        {
                            "ap1Name": "number or geometry",
                            "ap2Name": "thickness",
                            "ap2Primary": false,
                            "ap1ID": 1745360477238,
                            "ap2ID": 1745360476699
                        }
                    ],
                    "parentRepo": {
                        "privateRepo": false,
                        "repoName": "tenon-cutter",
                        "dateCreated": "2025-04-09T14:57:22Z",
                        "readMe": "https://raw.githubusercontent.com/alzatin/tenon-cutter/master/README.md?sanitize=true",
                        "yyyy": 2025,
                        "topMoleculeID": 1744210642818,
                        "githubMoleculesUsed": [],
                        "html_url": "https://github.com/alzatin/tenon-cutter",
                        "topics": [
                            "abundance-tool"
                        ],
                        "parentRepo": null,
                        "forks": 0,
                        "dateModified": "739350",
                        "ranking": 0,
                        "searchField": "tenon-cutter alzatin  abundance-tool",
                        "owner": "alzatin",
                        "description": "",
                        "contentURL": "https://raw.githubusercontent.com/alzatin/tenon-cutter/master/project.abundance?sanitize=true",
                        "svgURL": "https://raw.githubusercontent.com/alzatin/tenon-cutter/master/project.svg?sanitize=true"
                    },
                    "unitsKey": "Inches",
                    "fileTypeVersion": 1,
                    "compiledBom": []
                },
                {
                    "atomType": "Rotate",
                    "name": "Rotate",
                    "x": 0.35359116022099446,
                    "y": 0.20783132530120482,
                    "uniqueID": 1745361118702,
                    "ioValues": [
                        {
                            "name": "geometry",
                            "ioValue": 1745359644079
                        },
                        {
                            "name": "x-axis degrees",
                            "ioValue": 0
                        },
                        {
                            "name": "y-axis degrees",
                            "ioValue": 0
                        },
                        {
                            "name": "z-axis degrees",
                            "ioValue": 90
                        }
                    ],
                    "description": "Rotates the input geometry around the X, Y, or Z axis. Inputs are degrees."
                },
                {
                    "atomType": "Equation",
                    "name": "x - 1.25",
                    "x": 0.6629834254143646,
                    "y": 0.8042168674698795,
                    "uniqueID": 1745361226731,
                    "ioValues": [
                        {
                            "name": "x",
                            "ioValue": 18
                        }
                    ],
                    "description": "Defines a mathematical equation. Edit the output field to add or remove inputs.",
                    "currentEquation": "x - 1.25"
                },
                {
                    "atomType": "Equation",
                    "name": "x - 1",
                    "x": 0.17236662106703146,
                    "y": 0.4789156626506024,
                    "uniqueID": 1745362160878,
                    "ioValues": [
                        {
                            "name": "x",
                            "ioValue": 15
                        }
                    ],
                    "description": "Defines a mathematical equation. Edit the output field to add or remove inputs.",
                    "currentEquation": "x - 1"
                }
            ],
            "allConnectors": [
                {
                    "ap1Name": "number or geometry",
                    "ap2Name": "height",
                    "ap2Primary": false,
                    "ap1ID": 1745162799381,
                    "ap2ID": 1745359644079
                },
                {
                    "ap1Name": "number or geometry",
                    "ap2Name": "height",
                    "ap2Primary": false,
                    "ap1ID": 1745162799381,
                    "ap2ID": 1745359879510
                },
                {
                    "ap1Name": "number or geometry",
                    "ap2Name": "x",
                    "ap2Primary": false,
                    "ap1ID": 1745162799360,
                    "ap2ID": 1745361226731
                },
                {
                    "ap1Name": "number or geometry",
                    "ap2Name": "x",
                    "ap2Primary": false,
                    "ap1ID": 1745162799091,
                    "ap2ID": 1745362160878
                },
                {
                    "ap1Name": "number or geometry",
                    "ap2Name": "x",
                    "ap2Primary": false,
                    "ap1ID": 1745162799519,
                    "ap2ID": 1745359713330
                },
                {
                    "ap1Name": "number or geometry",
                    "ap2Name": "x",
                    "ap2Primary": false,
                    "ap1ID": 1745162799519,
                    "ap2ID": 1745359721801
                },
                {
                    "ap1Name": "number or geometry",
                    "ap2Name": "x length",
                    "ap2Primary": false,
                    "ap1ID": 1745162799519,
                    "ap2ID": 1745359851202
                },
                {
                    "ap1Name": "geometry",
                    "ap2Name": "geometry",
                    "ap2Primary": true,
                    "ap1ID": 1745359640458,
                    "ap2ID": 1745359644079
                },
                {
                    "ap1Name": "geometry",
                    "ap2Name": "geometry",
                    "ap2Primary": true,
                    "ap1ID": 1745359644079,
                    "ap2ID": 1745361118702
                },
                {
                    "ap1Name": "geometry",
                    "ap2Name": "geometry",
                    "ap2Primary": true,
                    "ap1ID": 1745359673536,
                    "ap2ID": 1745359687404
                },
                {
                    "ap1Name": "geometry",
                    "ap2Name": "geometry",
                    "ap2Primary": true,
                    "ap1ID": 1745359673536,
                    "ap2ID": 1745359692045
                },
                {
                    "ap1Name": "geometry",
                    "ap2Name": "Shape 2",
                    "ap2Primary": false,
                    "ap1ID": 1745359687404,
                    "ap2ID": 1745359700204
                },
                {
                    "ap1Name": "geometry",
                    "ap2Name": "Shape 1",
                    "ap2Primary": false,
                    "ap1ID": 1745359692045,
                    "ap2ID": 1745359700204
                },
                {
                    "ap1Name": "geometry",
                    "ap2Name": "geometry",
                    "ap2Primary": true,
                    "ap1ID": 1745359700204,
                    "ap2ID": 1745359769125
                },
                {
                    "ap1Name": "result",
                    "ap2Name": "xDist",
                    "ap2Primary": false,
                    "ap1ID": 1745359713330,
                    "ap2ID": 1745359692045
                },
                {
                    "ap1Name": "result",
                    "ap2Name": "xDist",
                    "ap2Primary": false,
                    "ap1ID": 1745359721801,
                    "ap2ID": 1745359687404
                },
                {
                    "ap1Name": "geometry",
                    "ap2Name": "geometry",
                    "ap2Primary": true,
                    "ap1ID": 1745359769125,
                    "ap2ID": 1745359775761
                },
                {
                    "ap1Name": "geometry",
                    "ap2Name": "number or geometry",
                    "ap2Primary": false,
                    "ap1ID": 1745359775761,
                    "ap2ID": 1745162798863
                },
                {
                    "ap1Name": "geometry",
                    "ap2Name": "geometry",
                    "ap2Primary": true,
                    "ap1ID": 1745359851202,
                    "ap2ID": 1745359879510
                },
                {
                    "ap1Name": "geometry",
                    "ap2Name": "geometry",
                    "ap2Primary": false,
                    "ap1ID": 1745359879510,
                    "ap2ID": 1745360230341
                },
                {
                    "ap1Name": "geometry",
                    "ap2Name": "geometry",
                    "ap2Primary": true,
                    "ap1ID": 1745359888697,
                    "ap2ID": 1745359906242
                },
                {
                    "ap1Name": "geometry",
                    "ap2Name": "Shape 3",
                    "ap2Primary": false,
                    "ap1ID": 1745359906242,
                    "ap2ID": 1745359700204
                },
                {
                    "ap1Name": "Geometry",
                    "ap2Name": "geometry",
                    "ap2Primary": true,
                    "ap1ID": 1745360230341,
                    "ap2ID": 1745359888697
                },
                {
                    "ap1Name": "Geometry",
                    "ap2Name": "geometry",
                    "ap2Primary": true,
                    "ap1ID": 1745360477454,
                    "ap2ID": 1745359673536
                },
                {
                    "ap1Name": "geometry",
                    "ap2Name": "geometry",
                    "ap2Primary": false,
                    "ap1ID": 1745361118702,
                    "ap2ID": 1745360477454
                },
                {
                    "ap1Name": "result",
                    "ap2Name": "zDist",
                    "ap2Primary": false,
                    "ap1ID": 1745361226731,
                    "ap2ID": 1745359775761
                },
                {
                    "ap1Name": "result",
                    "ap2Name": "y length",
                    "ap2Primary": false,
                    "ap1ID": 1745362160878,
                    "ap2ID": 1745359640458
                }
            ],
            "fileTypeVersion": 1,
            "compiledBom": []
        },
        {
            "atomType": "Rotate",
            "name": "Rotate",
            "x": 0.6513698630136986,
            "y": 0.6705336426914154,
            "uniqueID": 1746411158069,
            "ioValues": [
                {
                    "name": "geometry",
                    "ioValue": 1745162179008
                },
                {
                    "name": "x-axis degrees",
                    "ioValue": 180
                },
                {
                    "name": "y-axis degrees",
                    "ioValue": 0
                },
                {
                    "name": "z-axis degrees",
                    "ioValue": 0
                }
            ],
            "description": "Rotates the input geometry around the X, Y, or Z axis. Inputs are degrees."
        },
        {
            "atomType": "Move",
            "name": "Move",
            "x": 0.7753424657534246,
            "y": 0.7540603248259861,
            "uniqueID": 1746411334005,
            "ioValues": [
                {
                    "name": "geometry",
                    "ioValue": 1746411158069
                },
                {
                    "name": "xDist",
                    "ioValue": 0
                },
                {
                    "name": "yDist",
                    "ioValue": 0
                },
                {
                    "name": "zDist",
                    "ioValue": 19
                }
            ],
            "description": "Moves a shape laterally in X, Y, Z."
        }
    ],
    "allConnectors": [
        {
            "ap1Name": "number or geometry",
            "ap2Name": "Wood thickness",
            "ap2Primary": false,
            "ap1ID": 1745161265821,
            "ap2ID": 1745161481329
        },
        {
            "ap1Name": "number or geometry",
            "ap2Name": "Wood thickness",
            "ap2Primary": false,
            "ap1ID": 1745161265821,
            "ap2ID": 1745162618505
        },
        {
            "ap1Name": "number or geometry",
            "ap2Name": "Wood thickness",
            "ap2Primary": false,
            "ap1ID": 1745161265821,
            "ap2ID": 1745162799100
        },
        {
            "ap1Name": "number or geometry",
            "ap2Name": "table height",
            "ap2Primary": false,
            "ap1ID": 1745161414645,
            "ap2ID": 1745161481329
        },
        {
            "ap1Name": "number or geometry",
            "ap2Name": "table height",
            "ap2Primary": false,
            "ap1ID": 1745161414645,
            "ap2ID": 1745162618505
        },
        {
            "ap1Name": "number or geometry",
            "ap2Name": "table height",
            "ap2Primary": false,
            "ap1ID": 1745161414645,
            "ap2ID": 1745162799100
        },
        {
            "ap1Name": "number or geometry",
            "ap2Name": "table width",
            "ap2Primary": false,
            "ap1ID": 1745161425984,
            "ap2ID": 1745161481329
        },
        {
            "ap1Name": "number or geometry",
            "ap2Name": "table width",
            "ap2Primary": false,
            "ap1ID": 1745161425984,
            "ap2ID": 1745162618505
        },
        {
            "ap1Name": "number or geometry",
            "ap2Name": "table width",
            "ap2Primary": false,
            "ap1ID": 1745161425984,
            "ap2ID": 1745162799100
        },
        {
            "ap1Name": "number or geometry",
            "ap2Name": "table length",
            "ap2Primary": false,
            "ap1ID": 1745161438472,
            "ap2ID": 1745161481329
        },
        {
            "ap1Name": "number or geometry",
            "ap2Name": "table length",
            "ap2Primary": false,
            "ap1ID": 1745161438472,
            "ap2ID": 1745162618505
        },
        {
            "ap1Name": "number or geometry",
            "ap2Name": "table length",
            "ap2Primary": false,
            "ap1ID": 1745161438472,
            "ap2ID": 1745162799100
        },
        {
            "ap1Name": "Geometry",
            "ap2Name": "Shape 1",
            "ap2Primary": false,
            "ap1ID": 1745161481329,
            "ap2ID": 1745162179008
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "number or geometry",
            "ap2Primary": false,
            "ap1ID": 1745162179008,
            "ap2ID": 1743640240915
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "geometry",
            "ap2Primary": true,
            "ap1ID": 1745162179008,
            "ap2ID": 1746411158069
        },
        {
            "ap1Name": "Geometry",
            "ap2Name": "Shape 2",
            "ap2Primary": false,
            "ap1ID": 1745162618505,
            "ap2ID": 1745162179008
        },
        {
            "ap1Name": "Geometry",
            "ap2Name": "Shape 3",
            "ap2Primary": false,
            "ap1ID": 1745162799100,
            "ap2ID": 1745162179008
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "geometry",
            "ap2Primary": true,
            "ap1ID": 1746411158069,
            "ap2ID": 1746411334005
        }
    ],
    "unitsKey": "Inches",
    "fileTypeVersion": 1,
    "compiledBom": [],
    "filetypeVersion": 1
}